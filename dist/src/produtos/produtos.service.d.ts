import { Teclado } from './childs/childs-entity/child-teclado.entity';
import { Ssd } from './childs/childs-entity/child-ssd.entity';
import { FonteEnergia } from './childs/childs-entity/child-fonteEnergia.entity';
import { Headset } from './childs/childs-entity/child-headset.entity';
import { Monitor } from './childs/childs-entity/child-monitor.entity';
import { CreateProdutoDto } from './dto/create-produto.dto';
import { Produto } from './produto.entity';
import { Repository } from 'typeorm';
import { IPaginationOptions, Pagination } from 'nestjs-typeorm-paginate';
import { UpdateProdutoDto } from './dto/update-produto.dto';
import { Hd } from './childs/childs-entity/child-hd.entity';
import { Cooler } from './childs/childs-entity/child-cooler.entity';
import { Processador } from './childs/childs-entity/child-processador.entity';
import { Ram } from './childs/childs-entity/child-ram.entity';
export declare class ProdutosService {
    private readonly repository;
    private readonly repositoryMonitor;
    private readonly repositoryHd;
    private readonly repositoryCooler;
    private readonly repositoryHeadset;
    private readonly repositoryFonteEnergia;
    private readonly repositoryProcessador;
    private readonly repositorySsd;
    private readonly repositoryRam;
    private readonly repositoryTeclado;
    constructor(repository: Repository<Produto>, repositoryMonitor: Repository<Monitor>, repositoryHd: Repository<Hd>, repositoryCooler: Repository<Cooler>, repositoryHeadset: Repository<Headset>, repositoryFonteEnergia: Repository<FonteEnergia>, repositoryProcessador: Repository<Processador>, repositorySsd: Repository<Ssd>, repositoryRam: Repository<Ram>, repositoryTeclado: Repository<Teclado>);
    create(createProdutoDto: CreateProdutoDto): any;
    findAll(options: IPaginationOptions, search?: string): Promise<Pagination<Produto>>;
    findOne(id: number): Promise<Produto>;
    update(id: number, updateProdutoDto: UpdateProdutoDto): Promise<Produto>;
    remove(id: number): Promise<import("typeorm").DeleteResult>;
}
